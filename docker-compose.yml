services:
  # PostgreSQL Database with pgvector extension
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rag-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - PGVECTOR_CONN=postgresql+psycopg2://postgres:postgres@db:5432/postgres
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACEHUB_API_TOKEN=${HUGGINGFACEHUB_API_TOKEN}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend-python:/app
    networks:
      - rag-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_BASE=http://localhost:8000
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend-react:/app
      - /app/node_modules
    networks:
      - rag-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  rag-network:
    driver: bridge
